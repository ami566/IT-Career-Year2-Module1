GRID
Цел на задачата
Трябва да напишете програма, която да симулира компютърната игра GRID под номера на команди. Различен брой шофьори може да участва във всяко състезание и всеки шофьор ... ами, кара кола. Шофьорите имат различно отношение към пистата и автомобилите имат различни спецификации, което прави състезанието вълнуващо!
Настройка на проекта
За да настроите проекта си, използвайте скелета, който ви е предоставен. Проектът трябва да има класовете "StartUp" и "RaceTower" с namespace "GRID". Спазването на това правило ще доведе до компилирането на кода ви. Може свободно да използвате папки с namespace имена за останалата част на проекта ви.

Problem 1. Структура
Driver
Всички шофьори имат име, общо време и кола за шофиране:
Name – символен низ
TotalTime – реално число
Car – параметър от тип Car
FuelConsumptionPerKm – реално число
Speed – реално число
Скоростта на шофьора се изчислява по формулата по-долу. Имайте предвид, че скоростта се променя на всяка обиколка.
Speed = “(car’s Hp + tyre’s degradation) / car’s fuelAmount”

AggressiveDriver
Този тип водачи имат FuelConsumptionPerKm равен на 2.7 литра. Също така скоростта му е умножена по 1.3.
EnduranceDriver
и тип водачи имат FuelConsumptionPerKm равен на 1.5 литра.

Cars
Всяка кола трябва да запази своята конски сили (Hp), количеството гориво и вида на гумите, които са в момента.
Hp –  цяло число
FuelAmount – реално число
Tyre – параметър от тип Tyre
Максималният капацитет на горивния резервоар за всеки автомобил е 160 литра. Количеството гориво не може да стане по-голямо от максималния капацитет на резервоара. Ако ви се даде повече гориво, отколкото е необходимо, трябва да напълните резервоара до максимум и нищо друго не се случва.
Ако количеството гориво падне под 0 литра, трябва да направите изключение и водачът не може да продължи състезанието.

Tyres
Всеки тип гума има различна твърдост. Също така има ниво на разграждане, което е неговият живот:
Name – символине низ
Hardness –  реално число
Degradation – реално число
Всяка гума започва с деградация от 100 точки и пада надолу към 0. При всяка обиколка деградацията се намалява със стойността на твърдостта. Ако деградацията на гумата падне под 0 точки, гумата се взривява и водачът не може да продължи състезанието. Ако една гума се взриви, трябва да изхвърлите изключение.

UltrasoftTyre
Има допълнително свойство:
Grip –  положително реално число.
Името на гумата е "Ultrasoft".
При всяка обиколка деградацията пада с твърдостта си съчетана със сцеплението на гумата. Също така, този тип гума се взривява, когато разпадът на гумата падне под 30 точки.

HardTyre
Името на гумата е “Hard”.

Problem 2. Бизнес логика
Всяко изпълнение на приложението симулира само едно състезание. В началото получавате информация за пистата (обиколки / дължина), след което състезателите са регистрирани. Началото на състезанието се отбелязва с първата команда CompleteLaps. Състезанието завършва, когато всички обиколки се извършват от шофьорите.
The Controller Class
Бизнес логиката на програмата трябва да бъде концентрирана около няколко команди. Внедрете клас, наречен RaceTower, който ще притежава главната функционалност, представена от тези публично методи:

RaceTower.cs
public void SetTrackInfo(int lapsNumber, int trackLength)
{
    //TODO: Add some logic here …
}
 
public void RegisterDriver(List<string> commandArgs)
{
    //TODO: Add some logic here …
}
 
public void DriverBoxes(List<string> commandArgs)
{
    //TODO: Add some logic here …
}
 
public string CompleteLaps(List<string> commandArgs)
{
    //TODO: Add some logic here …
}
 
public string GetLeaderboard()
{
    //TODO: Add some logic here …
}
ЗАБЕЛЕЖКА: Не трябва да променяте нищо по методите. Трябва да имплементирате логиката на самите методи.
Методът SetTrackInfo() трябва да инициализира общия брой и дължина на трасето.

Команди
Има няколко команди, които контролират бизнес логиката на приложението и трябва да го направите.
Те са посочени по-долу.
RegisterDriver Команда
Създава състезател и го регистрира в състезанието. Входните данни може да не са винаги валидни. Ако не можете да създадете състезател с данните, предоставени по тази команда, просто го пропуснете. Всички успешно регистрирани състезатели трябва да бъдат запазени в клас Racetower във всякакъв тип структура от данни, осигурена от .NET Framework (без персонализирани структури).
Параметри
•	type – символен низ равен на “Aggressive“ или “Endurance“ 
•	name – символен низ 
•	hp – цяло число 
•	fuelAmount – реално число 
•	tyreType – символен низ 
•	tyreHardness – реално число 
Ако типът на гумата е Ultrasoft, ще получите още един параметър:
•	grip –  позитивно реално число 

Leaderboard Команда
На първия ред принтирайте:
Lap {currentLap}/{totalLaps}
На следващите редове всички състезателите трябва да се показват в реда на техния напредък в следния формат:
{position} {driverName} {totalTime/failureReason}
Състезателите трябва да бъдат подредени по общото време във възходящ ред. Всички състезатели с повреда трябва да бъдат принтирани след активните състезатели в реда на техния провал (последният неуспешен шофьор е на дъното).

CompleteLaps Команда
При тази команда всички водачи продължават състезанието със зададения брой обиколки. На всяка обиколка TotalTime на всеки водач трябва да се увеличи с резултата от следната формула:
“60 / (дължината на трасето / скоростта на състезателя)”
След всяка обиколка трябва да изпълните действията по-долу в същата последователност:
1.	Намалете количеството гориво на всеки състезател по следната формула: “trackLength * driver’s fuelConsumptionPerKm”. 
2.	Деградирайте гумата според вида й. 
Ако имате по-голям брой обиколки от броя на обиколките, останали в състезанието, трябва да изхвърлите изключение с подходящото съобщение и да не увеличавате броя завършени обиколки.
Параметри
•	numberOfLaps – цяло число 

Box Команда
Кара състезателя да посети бокса при текущата обиколка, което добавя 20 секунди към неговото време. При посещение на бокса състезателя може да смени гумите си с нови или да зареди с гориво.
Параметри
•	reasonToBox – симвоилен низ равен на ChangeTyres или Refuel 
•	driversName – символине низ 
•	tyreType / fuelAmount – символиен низ, определящ типа на новите гуми / реално число определяюо количеството гориво за презареждане 
Ако причината е смяна на гуми, ще получите допълнителни параметри:
•	tyreHardness - реално число 
Ако типът на гумата е Ultrasoft, ще получите 1 допълнителен параметър:
•	grip –  позитивно реално число 

Допълнително действие
DNF
Ако състезател спре поради някаква повреда, той вече не напредва в състезанието под командата CompleteLaps. Състезателите, които вече не се състезават, все още участват в дъното на класацията, в реда на техния провал (последният неуспешен шофьор е на дъното).
•	Съобщението в случай на спукана гума трябва да бъде - "Blown Tyre" 
•	Съобщението в случай на липса на гориво трябва да бъде - "Out of fuel" 
•	На първия ред ще получите цяло число, представляващо броя на обиколките в състезанието 
•	На втория ред ще получите цяло число, представляващо дължината на пистата 
•	На следващите редове ще получите различни команди. Трябва да спрете да четете входа, когато шофьорите завършат всички обиколки в състезанието 

Problem 3. Вход / Изход
Вход
По-долу можете да видите формата, в който всяка команда ще бъде дадена във входа:
•	RegisterDriver {type} {name} {hp} {fuelAmount} {tyreType} {tyreHardness} 
•	RegisterDriver {type} {name} {hp} {fuelAmount} Ultrasoft {tyreHardness} {grip} 
•	Leaderboard 
•	CompleteLaps {numberOfLaps} 
•	Box Refuel {driversName} {fuelAmount} 
•	Box ChangeTyres {driversName} Hard {tyreHardness} 
•	Box ChangeTyres {driversName} Ultrasoft {tyreHardness} {grip} 
Изход
По-долу можете да видите кой изход трябва да бъде предоставен от командите.
Leaderboard Команда
Lap {current lap}/{total laps number}
На следващите редове всички състезатели трябва да се показват в реда на техния напредък в следния формат:
{position} {driverName} {totalTime / failureReason}
CompleteLaps Команда
Ако на конзолата получите невалиден брой обиколки:
“There is no time! On lap {current lap}.”
Finish

След завършването на всички обиколки, трябва да отпечатате победителя в конзолата в следния формат:
“{Driver’s name} wins the race for {TotalTime} seconds.”
TotalTime трябва да се закръгли до три цифри след десетичната запетая.
Ограничения
•	Името на състезателя ще бъде символен низ, който може да съдържа всеки ASCII символ, с изключение на интервал. 
•	Имената на състезателите винаги ще бъдат уникални. 
•	Всички шофьори ще бъдат регистрирани преди началото на състезанието (няма да има команда RegisterDriver след първата команда CompleteLaps). 
•	Състезателите няма да бъдат пращани повече от веднъж в бокса на обиколка. 
•	Всяко състезание ще има победител. 
•	Няма да има невалидни входни данни. 
Примери
Input	Output
32
3
RegisterDriver Aggressive FirstDriver 650 140 Ultrasoft 0.2 3.8
RegisterDriver Endurance SecondDriver 467 78.48 Hard 0.8
RegisterDriver Endurance ThirdDriver 160 78.48 Ultrasoft 0.4 2.7
CompleteLaps 17
Leaderboard
Box Refuel SecondDriver 98.28
CompleteLaps 15	Lap 17/32
1 ThirdDriver 2896.110
2 FirstDriver 6918.938
3 SecondDriver 7209.032
SecondDriver wins the race for 9838.183 seconds.
10
5
RegisterDriver Aggressive FirstDriver 650 140 Ultrasoft 10.2 3.0
RegisterDriver Aggressive SecondDriver 650 140 Hard 3.9
RegisterDriver Endurance ThirdDriver 360 78.48 Ultrasoft 2.4 0.7
CompleteLaps 14
CompleteLaps 8
Leaderboard
Box ChangeTyres ThirdDriver Hard 0.3
CompleteLaps 2	There is no time! On lap 0.
Lap 8/10
1 ThirdDriver 931.587
2 SecondDriver 1124.098
3 FirstDriver Blown Tyre
ThirdDriver wins the race for 1752.693 seconds.
14
5
RegisterDriver Endurance FirstDriver 650 140 Hard 0.2
RegisterDriver Endurance SecondDriver 650 140 Ultrasoft 0.2 0.3
RegisterDriver Aggressive ThirdDriver 350 100 Ultrasoft 0.2 0.3
RegisterDriver Aggressive FourthDriver 450 60 Hard 1.2
CompleteLaps 1
Leaderboard
Box Refuel FourthDriver 168
CompleteLaps 6
Box Refuel FourthDriver 2
CompleteLaps 6
Leaderboard
CompleteLaps 1	Lap 1/14
1 FirstDriver 64.286
2 SecondDriver 64.286
3 ThirdDriver 70.200
4 FourthDriver 143.000
Lap 13/14
1 SecondDriver 1353.124
2 FirstDriver 1357.036
3 FourthDriver 2122.949
4 ThirdDriver Out of fuel
SecondDriver wins the race for 1563.054 seconds.

Точкуване
Всяка различна задача ви дава точки:
•	Структура - 30 точки 
•	Бизнес логика - 50 точки 
•	Вход/Изход - 20 точки 

